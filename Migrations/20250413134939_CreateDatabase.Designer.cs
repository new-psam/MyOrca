// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyOrca.Data;

#nullable disable

namespace MyOrca.Migrations
{
    [DbContext(typeof(OrcaDataContext))]
    [Migration("20250413134939_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyOrca.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Slug" }, "IX_Categoria_Slug")
                        .IsUnique();

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("MyOrca.Models.ContaFinanceira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Banco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("Numero");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal")
                        .HasDefaultValue(0m)
                        .HasColumnName("Saldo");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("char")
                        .HasColumnName("Tipo");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Nome" }, "IX_ContaFinanceira_Nome")
                        .IsUnique();

                    b.ToTable("ContaFinanceira", (string)null);
                });

            modelBuilder.Entity("MyOrca.Models.SubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Slug");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex(new[] { "Slug" }, "IX_SUBCATEGORIA_Slug")
                        .IsUnique();

                    b.ToTable("SubCategoria", (string)null);
                });

            modelBuilder.Entity("MyOrca.Models.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContaFinanceiraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Data")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Descricao");

                    b.Property<int?>("SubCategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("char")
                        .HasColumnName("Tipo");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaFinanceiraId");

                    b.HasIndex("SubCategoriaId");

                    b.ToTable("Transacao", (string)null);
                });

            modelBuilder.Entity("MyOrca.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "IX_USUARIO_Username")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("MyOrca.Models.ContaFinanceira", b =>
                {
                    b.HasOne("MyOrca.Models.Usuario", "Usuario")
                        .WithMany("ContaFinanceiras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ContaFinanceira_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MyOrca.Models.SubCategoria", b =>
                {
                    b.HasOne("MyOrca.Models.Categoria", "Categoria")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MyOrca.Models.Transacao", b =>
                {
                    b.HasOne("MyOrca.Models.ContaFinanceira", "ContaFinanceira")
                        .WithMany("Transacoes")
                        .HasForeignKey("ContaFinanceiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ContaFinanceira_Transacao");

                    b.HasOne("MyOrca.Models.SubCategoria", "SubCategoria")
                        .WithMany("Transacoes")
                        .HasForeignKey("SubCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_SubCategoria_Transacao");

                    b.Navigation("ContaFinanceira");

                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("MyOrca.Models.Categoria", b =>
                {
                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("MyOrca.Models.ContaFinanceira", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("MyOrca.Models.SubCategoria", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("MyOrca.Models.Usuario", b =>
                {
                    b.Navigation("ContaFinanceiras");
                });
#pragma warning restore 612, 618
        }
    }
}
